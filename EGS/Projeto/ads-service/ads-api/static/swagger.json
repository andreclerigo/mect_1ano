{
  "openapi": "3.0.3",
  "info": {
    "title": "Advertisement Service - OpenAPI 3.0",
    "description": "This is the documentation for the advertisement service developed as part of a bigger project for the class EGS.",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.11"
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "tags": [
    {
      "name": "ads",
      "description": "Register / Information about advertisements on the platform"
    },
    {
      "name": "users",
      "description": "Register, authenticate and profile of an user on the platform"
    },
    {
      "name": "analytics",
      "description": "Tracking of impressions and clicks of an advertisement"
    }
  ],
  "paths": {
    "/v1/ads": {
      "get": {
        "tags": [
          "ads"
        ],
        "summary": "Get ad's html snippet based on filtering",
        "description": "Get existing ads by entering optional parameters and updating the ad's impressions counter",
        "operationId": "get_ads",
        "parameters": [
            {
                "name": "publisher_id",
                "in": "query",
                "description": "The ID of the publisher requesting the ad",
                "required": true,
                "schema": {
                "type": "integer"
                },
                "example": 1534
            },
            {
                "name": "location",
                "in": "query",
                "description": "The targetting location for the ad",
                "required": false,
                "schema": {
                "type": "string"
                },
                "example": "portugal"
            },
            {
                "name": "age_range",
                "in": "query",
                "description": "The targetting age range ('youth', 'adults' or 'seniors')",
                "required": false,
                "schema": {
                "type": "string"
                },
                "example": "youth"
            }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ads"
                }
              }
            }
          },
          "404": {
            "description": "No ads found"
          }
        }
      },
      "post": {
        "tags": [
            "ads"
          ],
          "summary": "Upload a new ad to the platform",
          "description": "Upload a new ad to the platform associated with an advertiser",
          "operationId": "create_ad",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ad_type": {
                      "type": "string",
                      "example": "image"
                    },
                    "description": {
                      "type": "string",
                      "example": "Pingo Doce for the youth"
                    },
                    "pricing_model": {
                      "type": "string",
                      "example": "CPC"
                    },
                    "age_range": {
                      "type": "string",
                      "example": "youth"
                    },
                    "location": {
                      "type": "string",
                      "example": "portugal"
                    },
                    "ad_creative": {
                      "type": "string",
                      "example": "https://play-lh.googleusercontent.com/-KY7h2o5K2v9RgHpT_AGus3CfkE9FqEyGpxqGhLApkjt1RR_7m83pHM8tA2nWnYXNUnb"
                    },
                    "target": {
                      "type": "integer",
                      "example": 100
                    },
                    "redirect": {
                      "type": "string",
                      "example": "https://wwww.pingodoce.pt"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "400": {
              "description": "Invalid request data"
            },
            "401": {
              "description": "User not authorized"
            }
          }
      }
    },
    "/v1/ads/{ad_id}":{
        "delete" : {
            "tags": [
              "ads"
            ],
            "summary": "Delete an ad from the platform",
            "description": "Delete an ad from the platform",
            "operationId": "delete_ad",
            "security": [
              {
                "bearerAuth": []
              }
            ],
              "parameters": [
                  {
                  "name": "ad_id",
                  "in": "path",
                  "description": "The ID of the ad to be deleted",
                  "required": true,
                  "schema": {
                      "type": "integer"
                  }
                  }
              ],
            "responses": {
              "200": {
                "description": "Ad deleted"
              },
              "400": {
                  "description": "Invalid request data"
              },
              "401": {
                "description": "User not authorized"
              },
              "404": {
                "description": "Ad not found"
              }
            }
          },
          "get" : {
            "tags": [
              "ads"
            ],
            "summary": "Update the ad's clicks",
            "description": "Update the ad's number of clicks on the platform",
            "operationId": "update_ad_clicks",
            "parameters": [
                {
                    "name": "ad_id",
                    "in": "path",
                    "description": "The ID of the ad to be updated",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ],
            "responses": {
              "200": {
                "description": "Operation successful"
              },
              "400": {
                  "description": "Invalid request data"
              },
              "404": {
                "description": "Ad not found"
              }
            }
          }

    },
    "/v1/users": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Registers a new user",
        "description": "Registers a new user (advertiser/consumer) on the platform",
        "operationId": "create_user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Pingo doce"
                  },
                  "email": {
                    "type": "string",
                    "example": "pingodoce@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "password123"
                  },
                  "type": {
                    "type": "string",
                    "example": "A (advertiser) or C (consumer)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful, returns ID of user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": 2
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error, missing data or existing email"
          }
        }
      }
    },
    "/v1/login": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Authenticate an user",
        "description": "Login and authenticate an user on the platform",
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "pingodoce@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "abc123"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data"
          },
          "401": {
            "description": "User not authorized"
          }
        }
      }
    },
    "/v1/profile": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get the information about an user",
        "description": "Returns information about an user (name, email) and the ads associated with them (if it's not a consumer)",
        "operationId": "get_profile",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "advertiser_id": {
                      "type": "string",
                      "example": "111"
                    },
                    "name": {
                      "type": "string",
                      "example": "Pingo Doce"
                    },
                    "email": {
                      "type": "string",
                      "example": "pingodoce@example.com"
                    },
                    "type" :{
                      "type": "string",
                      "example": "A"
                    },
                    "ads": {
                      "$ref": "#/components/schemas/ads"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data"
          },
          "401": {
            "description": "User not authorized"
          },
          "404": {
            "description": "Profile not found"
          }
        }
      }
    },
    "/v1/analytics/ad/{ad_id}": {
      "get": {
        "tags": [
          "analytics"
        ],
        "security": [
            {
              "bearerAuth": []
            }
        ],
        "summary": "Get the analytics of an advertisement",
        "description": "Returns information about the performance of an advertisement given it's *ad_id*",
        "operationId": "get_ad_analytics",
        "parameters": [
          {
            "name": "ad_id",
            "in": "path",
            "description": "The advertisement id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/analytics_ad"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data"
          },
          "401": {
            "description": "User not authorized"
          },
          "404": {
            "description": "Ad not found"
          }
        }
      }
    },
    "/v1/analytics/advertiser/{adv_id}": {
        "get": {
          "tags": [
            "analytics"
          ],
          "security": [
              {
                "bearerAuth": []
              }
          ],
          "summary": "Get the analytics of an advertiser of the platform",
          "description": "Returns information about the performance of an advertiser given it's *adv_id*",
          "operationId": "get_adv_analytics",
          "parameters": [
            {
              "name": "adv_id",
              "in": "path",
              "description": "The advertiser id",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64",
                "example": 1
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/advertiser_analytics"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request data"
            },
            "401": {
              "description": "User not authorized or invalid advertiser id"
            },
            "404": {
              "description": "No ads found"
            }
          }
        }
    }

  },
  "components": {
    "schemas": {
      "ad": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 3
          },
          "description": {
            "type": "string",
            "example": "Pingo doce for the youth"
          },
          "ad_type": {
            "type": "string",
            "example": "image"
          },
          "pricing_model": {
            "type": "string",
            "example": "cost-per-click"
          },
          "impressions": {
            "type": "integer",
            "format": "int64",
            "example": 0
          },
          "clicks": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "ad_creative": {
            "type": "string",
            "example": "https://example.com/pingodoce/ad2.jpg"
          },
          "target_audience": {
            "$ref": "#/components/schemas/target_audience"
          }
        }
      },
      "advertiser_analytics": {
        "type": "object",
        "properties": {
            "highest_impression_ad": {
                "type": "object",
                "properties":{
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 2
                    },
                    "description": {
                        "type": "string",
                        "example": "Pingo doce for the youth"
                    },
                    "model": {
                        "type": "string",
                        "example": "CPM"
                    },
                    "impressions": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1756
                    },
                    "clicks": {
                        "type": "integer",
                        "format": "int64",
                        "example": 0
                    },
                    "ctr": {
                        "type": "float",
                        "format": "float",
                        "example": 14.87
                    }
                }
            },
            "highest_clicks_ad": {
                "type": "object",
                "properties":{
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "description": {
                        "type": "string",
                        "example": "Pingo doce for the adults"
                    },
                    "model": {
                        "type": "string",
                        "example": "CPC"
                    },
                    "impressions": {
                        "type": "integer",
                        "format": "int64",
                        "example": 235
                    },
                    "clicks": {
                        "type": "integer",
                        "format": "int64",
                        "example": 31
                    },
                    "ctr": {
                        "type": "float",
                        "format": "float",
                        "example": 13.23
                    }
                }
            },
            "total_impressions": {
                "type": "integer",
                "format": "int64",
                "example": 1991
            },
            "total_clicks": {
                "type": "integer",
                "format": "int64",
                "example": 31
            },
            "total_ctr": {
                "type": "integer",
                "format": "int64",
                "example": 1.56
            }
        }
      },
      "analytics_ad": {
        "type": "object",
        "properties":{
            "impressions": {
                "type": "integer",
                "format": "int64",
                "example": 1756
            },
            "clicks": {
                "type": "integer",
                "format": "int64",
                "example": 243
            },
            "ctr": {
                "type": "integer",
                "format": "int64",
                "example": 14
            },
            "model": {
                "type": "string",
                "example": "CPC"
            }
        }
      },

      "ads": {
        "required": [
          "ads"
        ],
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ad"
        }
      },
      "target_audience": {
        "required": [
          "ads"
        ],
        "type": "object",
        "properties": {
          "location": {
            "type": "string",
            "example": "portugal"
          },
          "age_range": {
            "type": "string",
            "example": "youth"
          }
        }
      },
      "advertiser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "name": {
            "type": "string",
            "example": "Pingo Doce"
          },
          "email": {
            "type": "string",
            "example": "pingodoce@example.com"
          },
          "password": {
            "type": "string",
            "example": "password123"
          },
          "ads": {
            "$ref": "#/components/schemas/ads"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}