# Create App deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  mame: app
  namespace: egs-mixit
spec:
  replicas: 5
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - name: app
        image: registry.deti:5000/egs-mixit/app-volumes:v1
        ports:
          - containerPort: 8080

# Create nginx deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: egs-mixit
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  strategy: {}
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - image: registry.deti:5000/egs-mixit/nginx-volumes:v1
          name: nginx
          ports:
            - containerPort: 80
          resources: {}
          volumeMounts:
            - name: nginx-static
              mountPath: /var/www/static
      restartPolicy: Always
      volumes:
        - name: nginx-static
          persistentVolumeClaim:
            claimName: nginx-static-pvc


# Create Service for APP
---
apiVersion: v1
kind: Service
metadata:
  name: app
  namespace: egs-mixit
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: app

# Create Service for APP
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: egs-mixit
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: nginx

# Configure Traefik
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-k3s
  namespace: egs-mixit
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/frontend-entry-points: http,https
    traefik.ingress.kubernetes.io/redirect-entry-point: https
    traefik.ingress.kubernetes.io/redirect-permanent: "true"
spec:
  rules:
  - host: app-egs-mixit.k3s
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx
            port: 
              number: 80
